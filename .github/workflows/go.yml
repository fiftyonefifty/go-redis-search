name: Go

on:
  push:
    branches: [ '**' ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.vscode/**'
      - '.github/dependabot.yml'
      - '.env'
      - 'docker-compose.yml'
  pull_request:
    paths-ignore:
      - '**.md'
    branches: [ main ]
env:
  GO_VERSION: '1.18'


jobs:
  pre_flight:
    runs-on: ubuntu-latest
    
    outputs:
      new_tag: ${{ steps.tag_version.outputs.new_tag }}
      changelog : ${{ steps.tag_version.outputs.changelog }}
    steps:
    - name: Establish tags and versions
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

  build:
    runs-on: ubuntu-latest
    needs: [pre_flight]
    steps:
    - name: Echo Tags
      run: |
       echo new_tag: ${{needs.pre_flight.outputs.new_tag}} 
       echo changelog: ${{needs.pre_flight.outputs.changelog}}

    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: "^${{ env.GO_VERSION }}"

    - name: go mod vendor
      run: |
        go mod tidy -compat="${{ env.GO_VERSION }}" 
        go mod download
        go mod vendor

    - name: move vendor sub folders
      run: |
        mv ./vendor/github.com/fluffy-bunny/sarulabsdi/genny/ ./genny/sarulabsdi/
        rm -rf ./vendor/

    - name: Install Mockgen
      run: |
        go install github.com/golang/mock/mockgen@latest
    - name: Install genny
      run: |
        go version
        go install github.com/cheekybits/genny@latest
    
    - name: GO GENERATE
      run: |
        go generate -x ./...
        rm -rf ./genny/sarulabsdi/
        go mod tidy -compat="${{ env.GO_VERSION }}" 

    # NOTE: This will NOT trigger another run of CI.yml
    - name: AutoCommit
      uses: stefanzweifel/git-auto-commit-action@v4.13.1
      with:
        commit_message: Apply genny and mockgen changes

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

  release:
    needs: [pre_flight,build]
    runs-on: ubuntu-latest

    steps:
    - run: |
        echo new_tag: ${{needs.pre_flight.outputs.new_tag}} 
        echo changelog: ${{needs.pre_flight.outputs.changelog}}
    
    - name: Create a GitHub release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          tag_name: ${{needs.pre_flight.outputs.new_tag}}
          release_name: Release ${{needs.pre_flight.outputs.new_tag}} 
          body:  ${{needs.pre_flight.outputs.changelog}}
    
